% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/customvision_training.R
\name{publish_model}
\alias{publish_model}
\alias{unpublish_model}
\alias{export_model}
\title{Publish, export and unpublish a Custom Vision model iteration}
\usage{
publish_model(model, name, prediction_resource)

unpublish_model(model, confirm = TRUE)

export_model(model, format, download = TRUE)
}
\arguments{
\item{model}{A Custom Vision model iteration object.}

\item{name}{For \code{publish_model}, the name to assign to the published model on the prediction endpoint.}

\item{prediction_resource}{For \code{publish_model}, the Custom Vision prediction resource to publish to. This can either be a string containing the Azure resource ID, or an AzureRMR resource object.}

\item{confirm}{For \code{unpublish_model}, whether to ask for confirmation first.}

\item{format}{For \code{export_model}, the format to export to. See below for supported formats.}

\item{download}{For \code{export_model}, whether to download the exported model.}
}
\value{
\code{export_model} returns the source URL of the downloaded file, invisibly if \code{download=TRUE}.
}
\description{
Publish, export and unpublish a Custom Vision model iteration
}
\details{
Publishing a model makes it available to clients as a predictive service. Exporting a model serialises it to a file of the given format, which can then be downloaded. Each iteration of the model can be published or exported separately.

The \code{format} argument to \code{export_model} can be one of the following. Note that exporting a model requires that the project was created with support for it.
\itemize{
\item "onnx 1.0", "onnx 1.2": ONNX 1.0 or 1.2
\item "coreml": CoreML, for iOS 11 devices
\item "tensorflow": TensorFlow, for Android devices
\item "linux docker", "windows docker", "arm docker": A Docker image for the given OS
\item "vaidk": Vision AI Development Kit
}
}
\seealso{
\code{\link{train_model}}, \code{\link{get_model}}, \code{\link{customvision_predictive_service}}, \code{\link{predict.classification_service}}, \code{\link{predict.object_detection_service}}
}
